EXPORT=BUILD.LAYOUTS:LAYOUTS
EXPORT=INCLUDES.IN:INCLUDES
EXPORT=MERGE.IN:IN
EXPORT=KICKVAR.DATA:CONFIG
EXPORT=LIQUID.OUT:GENERATED
EXPORT=BUILD.CONFIG:READYCONFIG

Includes(Split) OUT -> INCLUDES Build(jekyll/DocumentBuilder)
Includes() OUT -> INCLUDES Liquid(liquid/Template)

Build(jekyll/DocumentBuilder) TEMPLATE -> IN Buffer(MergeGroups)
Merge(Merge) OUT -> IN Build()
Build() VARIABLES -> IN SplitDoc(Split)

'page' -> PROPERTY SetPageVar(SetPropertyValue)
SplitDoc() OUT -> VALUE SetPageVar()
CreateVars(CreateObject) OUT -> IN SetPageVar() OUT -> IN SetSiteVar(SetPropertyValue)
SetSiteVar() OUT -> IN SetPaginatorVar(SetPropertyValue) OUT -> IN Buffer()

'site' -> PROPERTY SetSiteVar(SetPropertyValue)
KickVar(Kick) OUT -> VALUE SetSiteVar()
SplitDoc() OUT -> IN KickVar()

'paginator' -> KEY GetPaginator(GetObjectKey)
'paginator' -> PROPERTY SetPaginatorVar(SetPropertyValue)
SplitDoc() OUT -> IN GetPaginator()
SplitDoc() OUT -> START CreateVars(CreateObject)
GetPaginator() MISSED -> START CreateEmptyPaginator(CreateObject)
CreateEmptyPaginator() OUT -> IN MergePaginator(Merge)
GetPaginator() OUT -> IN MergePaginator()
MergePaginator() OUT -> VALUE SetPaginatorVar()

Buffer() OUT -> IN SplitBufferResult(Split)
'0' -> KEY GetTemplate(GetObjectKey)
SplitBufferResult() OUT -> IN GetTemplate() OUT -> IN FirstOnly(FirstGroup)
FirstOnly() OUT -> TEMPLATE Liquid(liquid/Template)
'1' -> KEY GetVariables(GetObjectKey)
SplitBufferResult() OUT -> IN GetVariables()
GetVariables() OUT -> IN SplitVariables(Split) OUT -> VARIABLES Liquid()
